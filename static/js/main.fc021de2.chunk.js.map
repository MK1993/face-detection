{"version":3,"sources":["App.js","reportWebVitals.js","index.js"],"names":["Navigation","React","lazy","Logo","ImageLinkForm","Rank","FaceDetect","SignIn","Register","initialState","input","imageUrl","box","route","isSignedIn","user","id","name","email","entries","joined","App","calculateFaceLocation","data","clarifaiFace","outputs","regions","region_info","bounding_box","image","document","getElementById","width","Number","height","leftCol","left_col","topRow","top_row","rightCol","right_col","bottomRow","bottom_row","displayFaceBox","setState","loadUser","onSubmit","state","requestOptions","method","headers","body","JSON","stringify","fetch","then","response","json","count","Object","assign","catch","console","log","err","onInputChange","event","target","value","onRouteChange","this","className","params","fallback","Component","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode"],"mappings":"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","file":"static/js/main.fc021de2.chunk.js","sourcesContent":["import React,{Component,Suspense}from\"react\";import\"./App.css\";import Particles from\"react-particles-js\";\r\n\r\nconst Navigation=React.lazy(()=>import(\"./components/Navigation/Navigation\")),Logo=React.lazy(()=>import(\"./components/Logo/Logo\")),ImageLinkForm=React.lazy(()=>import(\"./components/ImageLinkForm/ImageLinkForm\")),Rank=React.lazy(()=>import(\"./components/Rank/Rank\")),FaceDetect=React.lazy(()=>import(\"./components/FaceDetect/FaceDetect\")),SignIn=React.lazy(()=>import(\"./components/SignIn/SignIn\")),Register=React.lazy(()=>import(\"./components/Register/Register\"));\r\n\r\nconst initialState={input:\"\",imageUrl:\"\",box:{},route:\"signin\",isSignedIn:!1,user:{id:\"\",name:\"\",email:\"\",entries:0,joined:\"\"}};\r\n\r\nclass App extends Component {\r\n  constructor() {\r\n    super();\r\n    this.state = initialState\r\n  }\r\n  calculateFaceLocation = data => {\r\n    const clarifaiFace=data.outputs[0].data.regions[0].region_info.bounding_box,image=document.getElementById(\"inputimage\"),width=Number(image.width),height=Number(image.height);\r\n    return {\r\n      leftCol: clarifaiFace.left_col * width,\r\n      topRow: clarifaiFace.top_row * height,\r\n      rightCol: width - (clarifaiFace.right_col * width),\r\n      bottomRow: height - (clarifaiFace.bottom_row * height)\r\n    };\r\n  };\r\n  displayFaceBox = box => {\r\n    this.setState({ box: box });\r\n  };\r\n  loadUser= data => {\r\n    this.setState({user: {\r\n      id:data.id,\r\n      name:data.name,\r\n      email:data.email,\r\n      entries:data.entries,\r\n      joined: data.joined\r\n    }})\r\n  }\r\n  onSubmit = () => {\r\n    this.setState({ imageUrl: this.state.input });\r\n    const requestOptions = {\r\n      method: 'POST',\r\n      headers: { 'Content-Type': 'application/json' },\r\n      body: JSON.stringify({ input:this.state.input })\r\n    };\r\n    fetch('https://face-recognition-app-backend.herokuapp.com/imageurl',requestOptions)\r\n    .then(response => response.json())\r\n    .then(response=>{\r\n      if(response){\r\n        const requestOptions = {\r\n          method: 'PUT',\r\n          headers: { 'Content-Type': 'application/json' },\r\n          body: JSON.stringify({ id:this.state.user.id })\r\n        };\r\n        fetch('https://face-recognition-app-backend.herokuapp.com/image',requestOptions)\r\n        .then(response => response.json())\r\n        .then(count=>{\r\n            if(count){\r\n              this.setState(Object.assign(this.state.user,{entries:count}))\r\n            }\r\n        })\r\n        .catch(console.log)\r\n      }\r\n      this.displayFaceBox(this.calculateFaceLocation(response))\r\n    })\r\n    .catch(err=>console.log(err))\r\n  };\r\n  onInputChange = event => this.setState({ input: event.target.value });\r\n  onRouteChange = route => {\r\n    if(route === 'signout'){\r\n      this.setState({isSignedIn: false})\r\n      this.setState({initialState})\r\n    } else if(route === 'home'){\r\n      this.setState({isSignedIn: true})\r\n    }\r\n    this.setState({route: route})\r\n  }\r\n  render() {\r\n    const {isSignedIn,route,box,imageUrl} = this.state\r\n    return (\r\n      <div className=\"App\"> <Particles className=\"particles\" params={{\"particles\":{\"number\":{\"value\": 150}, \"size\":{\"value\": 3}}, \"interactivity\":{\"events\":{\"onhover\":{\"enable\": true, \"mode\": \"repulse\"}}}}}/> <Suspense fallback={<div>Chargement...</div>}> <Navigation isSignedIn={isSignedIn}onRouteChange={this.onRouteChange}/>{route==='home' ? <div> <Logo/> <Rank name={this.state.user.name}entries={this.state.user.entries}/> <ImageLinkForm onInputChange={this.onInputChange}onSubmit={this.onSubmit}/> <FaceDetect box={box}imageUrl={imageUrl}/> </div>: route==='signin' ? <SignIn loadUser={this.loadUser}onRouteChange={this.onRouteChange}/> : <Register loadUser={this.loadUser}onRouteChange={this.onRouteChange}/>}</Suspense></div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default App;","const reportWebVitals = onPerfEntry => {\r\n  if (onPerfEntry && onPerfEntry instanceof Function) {\r\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\r\n      getCLS(onPerfEntry);\r\n      getFID(onPerfEntry);\r\n      getFCP(onPerfEntry);\r\n      getLCP(onPerfEntry);\r\n      getTTFB(onPerfEntry);\r\n    });\r\n  }\r\n};\r\n\r\nexport default reportWebVitals;\r\n","import React from\"react\";import ReactDOM from\"react-dom\";import\"./index.css\";import App from\"./App\";import reportWebVitals from\"./reportWebVitals\";import\"tachyons\";\r\n\r\nReactDOM.render(\r\n  <React.StrictMode> <App/> </React.StrictMode>,\r\n  document.getElementById('root')\r\n);\r\n\r\nreportWebVitals();"],"sourceRoot":""}