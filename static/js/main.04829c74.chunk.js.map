{"version":3,"sources":["App.js","reportWebVitals.js","serviceWorkerRegistration.js","index.js"],"names":["Navigation","React","lazy","Logo","ImageLinkForm","Rank","FaceDetect","SignIn","Register","Modal","Profile","initialState","input","imageUrl","boxes","route","isProfileOpen","isSignedIn","user","id","name","email","entries","joined","age","pet","App","calculateFaceLocations","data","image","document","getElementById","width","Number","height","outputs","regions","map","face","clarifaiFace","region_info","bounding_box","leftCol","left_col","topRow","top_row","rightCol","right_col","bottomRow","bottom_row","displayFaceBoxes","e","setState","loadUser","onSubmit","state","t","method","headers","Authorization","window","sessionStorage","getItem","body","JSON","stringify","fetch","then","json","Object","assign","catch","console","log","onInputChange","event","target","value","onRouteChange","toggleModal","token","response","this","className","params","fallback","Component","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","isLocalhost","Boolean","location","hostname","match","registerValidSW","swUrl","config","navigator","serviceWorker","register","registration","onupdatefound","installingWorker","installing","onstatechange","controller","onUpdate","onSuccess","error","ReactDOM","render","StrictMode","URL","process","href","origin","addEventListener","contentType","get","status","indexOf","ready","unregister","reload","checkValidServiceWorker","serviceWorkerRegistration"],"mappings":"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","file":"static/js/main.04829c74.chunk.js","sourcesContent":["import React,{Suspense,Component}from\"react\";import\"./App.css\";import Particles from\"react-particles-js\";\r\n\r\nconst Navigation=React.lazy(()=>import(\"./components/Navigation/Navigation\")),Logo=React.lazy(()=>import(\"./components/Logo/Logo\")),ImageLinkForm=React.lazy(()=>import(\"./components/ImageLinkForm/ImageLinkForm\")),Rank=React.lazy(()=>import(\"./components/Rank/Rank\")),FaceDetect=React.lazy(()=>import(\"./components/FaceDetect/FaceDetect\")),SignIn=React.lazy(()=>import(\"./components/SignIn/SignIn\")),Register=React.lazy(()=>import(\"./components/Register/Register\")),Modal=React.lazy(()=>import(\"./components/Modal/Modal\")),Profile=React.lazy(()=>import(\"./components/Profile/Profile\"));\r\n\r\nconst initialState={input:\"\",imageUrl:\"\",boxes:[],route:\"signin\",isProfileOpen:false,isSignedIn:false,user:{id:\"\",name:\"\",email:\"\",entries:0,joined:\"\",age:0,pet:\"\"}};\r\n\r\nclass App extends Component {\r\n  constructor() {\r\n    super();\r\n    this.state = initialState\r\n  }\r\n  \r\n  componentDidMount() {\r\n    const token = window.sessionStorage.getItem('token');\r\n    if (token) {\r\n      fetch('https://face-recognition-app-backend.herokuapp.com/signin', {\r\n        method: 'POST',\r\n        headers: {\r\n          'Content-Type': 'application/json',\r\n          'Authorization': token\r\n        }\r\n      })\r\n      .then(response => response.json())\r\n      .then(data => {\r\n        if (data && data.id) {\r\n          fetch(`https://face-recognition-app-backend.herokuapp.com/profile/${data.id}`, {\r\n            method: 'GET',\r\n            headers: {\r\n              'Content-Type': 'application/json',\r\n              'Authorization': token\r\n            }\r\n          })\r\n          .then(response => response.json())\r\n          .then(user => {\r\n            if (user && user.email) {\r\n              this.loadUser(user)\r\n              this.onRouteChange('home');\r\n            }\r\n          })\r\n        }\r\n      })\r\n      .catch(console.log)\r\n    }\r\n  }\r\n  calculateFaceLocations = data => {\r\n    if(data){\r\n      const image=document.getElementById(\"inputimage\"),width=Number(image.width),height=Number(image.height);\r\n      return data.outputs[0].data.regions.map(face => {\r\n        const clarifaiFace = face.region_info.bounding_box;\r\n        return {\r\n          leftCol: clarifaiFace.left_col * width,\r\n          topRow: clarifaiFace.top_row * height,\r\n          rightCol: width - (clarifaiFace.right_col * width),\r\n          bottomRow: height - (clarifaiFace.bottom_row * height)\r\n        }\r\n      });\r\n    }\r\n      return\r\n  };\r\n  displayFaceBoxes=(e=>{e&&this.setState({boxes:e})});\r\n  loadUser=(e=>{this.setState({user:{id:e.id,name:e.name,email:e.email,entries:e.entries,joined:e.joined}})});\r\n  onSubmit=(()=>{this.setState({imageUrl:this.state.input});const t={method:\"POST\",headers:{\"Content-Type\":\"application/json\",Authorization:window.sessionStorage.getItem(\"token\")},body:JSON.stringify({input:this.state.input})};fetch(\"https://face-recognition-app-backend.herokuapp.com/imageurl\",t).then(t=>t.json()).then(t=>{if(t){const t={method:\"PUT\",headers:{\"Content-Type\":\"application/json\",Authorization:window.sessionStorage.getItem(\"token\")},body:JSON.stringify({id:this.state.user.id})};fetch(\"https://face-recognition-app-backend.herokuapp.com/image\",t).then(t=>t.json()).then(t=>{t&&this.setState(Object.assign(this.state.user,{entries:t}))}).catch(console.log)}this.displayFaceBoxes(this.calculateFaceLocations(t))}).catch(t=>console.log(t))});\r\n  onInputChange = event => this.setState({ input: event.target.value });\r\n  onRouteChange = route => {\r\n    if(route === 'signout'){\r\n      return this.setState(initialState)\r\n    } else if(route === 'home'){\r\n      this.setState({isSignedIn: true})\r\n    }\r\n    this.setState({route: route})\r\n  }\r\n  toggleModal=(()=>{this.setState(e=>({...e,isProfileOpen:!e.isProfileOpen}))});\r\n\r\n  render() {\r\n    const {isSignedIn,route,boxes,imageUrl,isProfileOpen,user} = this.state\r\n    return (\r\n      <div className=\"App\"> <Particles className=\"particles\" params={{\"particles\":{\"number\":{\"value\": 150}, \"size\":{\"value\": 3}}, \"interactivity\":{\"events\":{\"onhover\":{\"enable\": true, \"mode\": \"repulse\"}}}}}/> <Suspense fallback={<div>Chargement...</div>}> <Navigation isSignedIn={isSignedIn} onRouteChange={this.onRouteChange} toggleModal={this.toggleModal}/> {isProfileOpen && <Modal><Profile isProfileOpen={isProfileOpen} toggleModal={this.toggleModal} loadUser={this.loadUser} user={user}/></Modal>}{route==='home' ? <div> <Logo/> <Rank name={this.state.user.name}entries={this.state.user.entries}/> <ImageLinkForm onInputChange={this.onInputChange}onSubmit={this.onSubmit}/> <FaceDetect boxes={boxes}imageUrl={imageUrl}/> </div>: route==='signin' ? <SignIn loadUser={this.loadUser} onRouteChange={this.onRouteChange}/> : <Register loadUser={this.loadUser} onRouteChange={this.onRouteChange}/>}</Suspense></div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default App;","const reportWebVitals = onPerfEntry => {\r\n    if (onPerfEntry && onPerfEntry instanceof Function) {\r\n      import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\r\n        getCLS(onPerfEntry);\r\n        getFID(onPerfEntry);\r\n        getFCP(onPerfEntry);\r\n        getLCP(onPerfEntry);\r\n        getTTFB(onPerfEntry);\r\n      });\r\n    }\r\n};\r\n  \r\nexport default reportWebVitals;","// This optional code is used to register a service worker.\r\n// register() is not called by default.\r\n\r\n// This lets the app load faster on subsequent visits in production, and gives\r\n// it offline capabilities. However, it also means that developers (and users)\r\n// will only see deployed updates on subsequent visits to a page, after all the\r\n// existing tabs open on the page have been closed, since previously cached\r\n// resources are updated in the background.\r\n\r\n// To learn more about the benefits of this model and instructions on how to\r\n// opt-in, read https://cra.link/PWA\r\n\r\nconst isLocalhost = Boolean(\r\n    window.location.hostname === 'localhost' ||\r\n      // [::1] is the IPv6 localhost address.\r\n      window.location.hostname === '[::1]' ||\r\n      // 127.0.0.0/8 are considered localhost for IPv4.\r\n      window.location.hostname.match(/^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/)\r\n  );\r\n  \r\n  export function register(config) {\r\n    if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\r\n      // The URL constructor is available in all browsers that support SW.\r\n      const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\r\n      if (publicUrl.origin !== window.location.origin) {\r\n        // Our service worker won't work if PUBLIC_URL is on a different origin\r\n        // from what our page is served on. This might happen if a CDN is used to\r\n        // serve assets; see https://github.com/facebook/create-react-app/issues/2374\r\n        return;\r\n      }\r\n  \r\n      window.addEventListener('load', () => {\r\n        const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\r\n  \r\n        if (isLocalhost) {\r\n          // This is running on localhost. Let's check if a service worker still exists or not.\r\n          checkValidServiceWorker(swUrl, config);\r\n  \r\n          // Add some additional logging to localhost, pointing developers to the\r\n          // service worker/PWA documentation.\r\n          navigator.serviceWorker.ready.then(() => {\r\n            console.log(\r\n              'This web app is being served cache-first by a service ' +\r\n                'worker. To learn more, visit https://cra.link/PWA'\r\n            );\r\n          });\r\n        } else {\r\n          // Is not localhost. Just register service worker\r\n          registerValidSW(swUrl, config);\r\n        }\r\n      });\r\n    }\r\n  }\r\n  \r\n  function registerValidSW(swUrl, config) {\r\n    navigator.serviceWorker\r\n      .register(swUrl)\r\n      .then((registration) => {\r\n        registration.onupdatefound = () => {\r\n          const installingWorker = registration.installing;\r\n          if (installingWorker == null) {\r\n            return;\r\n          }\r\n          installingWorker.onstatechange = () => {\r\n            if (installingWorker.state === 'installed') {\r\n              if (navigator.serviceWorker.controller) {\r\n                // At this point, the updated precached content has been fetched,\r\n                // but the previous service worker will still serve the older\r\n                // content until all client tabs are closed.\r\n                console.log(\r\n                  'New content is available and will be used when all ' +\r\n                    'tabs for this page are closed. See https://cra.link/PWA.'\r\n                );\r\n  \r\n                // Execute callback\r\n                if (config && config.onUpdate) {\r\n                  config.onUpdate(registration);\r\n                }\r\n              } else {\r\n                // At this point, everything has been precached.\r\n                // It's the perfect time to display a\r\n                // \"Content is cached for offline use.\" message.\r\n                console.log('Content is cached for offline use.');\r\n  \r\n                // Execute callback\r\n                if (config && config.onSuccess) {\r\n                  config.onSuccess(registration);\r\n                }\r\n              }\r\n            }\r\n          };\r\n        };\r\n      })\r\n      .catch((error) => {\r\n        console.error('Error during service worker registration:', error);\r\n      });\r\n  }\r\n  \r\n  function checkValidServiceWorker(swUrl, config) {\r\n    // Check if the service worker can be found. If it can't reload the page.\r\n    fetch(swUrl, {\r\n      headers: { 'Service-Worker': 'script' },\r\n    })\r\n      .then((response) => {\r\n        // Ensure service worker exists, and that we really are getting a JS file.\r\n        const contentType = response.headers.get('content-type');\r\n        if (\r\n          response.status === 404 ||\r\n          (contentType != null && contentType.indexOf('javascript') === -1)\r\n        ) {\r\n          // No service worker found. Probably a different app. Reload the page.\r\n          navigator.serviceWorker.ready.then((registration) => {\r\n            registration.unregister().then(() => {\r\n              window.location.reload();\r\n            });\r\n          });\r\n        } else {\r\n          // Service worker found. Proceed as normal.\r\n          registerValidSW(swUrl, config);\r\n        }\r\n      })\r\n      .catch(() => {\r\n        console.log('No internet connection found. App is running in offline mode.');\r\n      });\r\n  }\r\n  \r\n  export function unregister() {\r\n    if ('serviceWorker' in navigator) {\r\n      navigator.serviceWorker.ready\r\n        .then((registration) => {\r\n          registration.unregister();\r\n        })\r\n        .catch((error) => {\r\n          console.error(error.message);\r\n        });\r\n    }\r\n}","import React from\"react\";import ReactDOM from\"react-dom\";import App from\"./App\";import reportWebVitals from\"./reportWebVitals\";import 'bootstrap/dist/css/bootstrap.min.css';import\"tachyons\";import\"./index.css\";import * as serviceWorkerRegistration from './serviceWorkerRegistration';\r\n\r\nReactDOM.render(\r\n  <React.StrictMode> <App/> </React.StrictMode>,\r\n  document.getElementById('root')\r\n);\r\n\r\n// If you want your app to work offline and load faster, you can change\r\n// unregister() to register() below. Note this comes with some pitfalls.\r\n// Learn more about service workers: https://cra.link/PWA\r\nserviceWorkerRegistration.register();\r\n\r\nreportWebVitals();"],"sourceRoot":""}